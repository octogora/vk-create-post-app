// URL —Ç–≤–æ–µ–≥–æ Cloudflare Worker'–∞
const workerUrl = 'https://still-snow-4ac7.irkplast.workers.dev/'; 

let formData = {};

function showStep(step) {
  document.querySelectorAll('.step').forEach(el => el.classList.remove('active'));
  document.querySelector(`[data-step="${step}"]`).classList.add('active');

  if (step === 3) updatePreview();
}

function submitPost() {
  const postText = document.querySelector('[data-step="2"] textarea')?.value ||
                   document.getElementById('preview')?.innerText;

  if (!postText) {
      alert("–ü–æ—Å—Ç –ø—É—Å—Ç–æ–π!");
      return;
  }

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  sendPostToServer(postText);
}

function updatePreview() {
  const title = document.getElementById('title').value.trim();
  const content = document.getElementById('content').value.trim();
  const category = document.getElementById('category').value;
  const location = document.getElementById('location').value.trim();
  const contacts = document.getElementById('contacts').value.trim();

  let preview = `üìå ${title || '[–ó–∞–≥–æ–ª–æ–≤–æ–∫]'}`;
  preview += `\n\n${content || '[–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç]'}`;

  if (location) preview += `\n\nüìç ${location}`;
  if (contacts) preview += `\nüìû ${contacts}`;

  const categoryMap = {
    prodam: '#–ø—Ä–æ–¥–∞–∂–∞',
    kuplu: '#–∫—É–ø–ª—é',
    otdam: '#–æ—Ç–¥–∞–º',
    ishu: '#–∏—â—É',
    usluga: '#—É—Å–ª—É–≥–∞'
  };

  preview += `\n\n#${categoryMap[category] || ''}`;

  document.getElementById('preview').innerText = preview;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª–µ–π
document.addEventListener('input', e => {
  if ([ 'title', 'content', 'location', 'contacts' ].includes(e.target.id)) {
    updatePreview();
  }
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ —Å–º–µ–Ω–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
document.getElementById('category').addEventListener('change', updatePreview);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
async function sendPostToServer(postText) {
  try {
      const response = await fetch(workerUrl, {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json'
          },
          body: JSON.stringify({
              postText
          })
      });

      const result = await response.json();

      console.log('–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', result);

      if (result && result.response && result.response.post_id) {
          showStep(4); // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —ç–∫—Ä–∞–Ω—É —É—Å–ø–µ—Ö–∞
      } else {
          alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ—Å—Ç–∞');
          console.error(result);
      }
  } catch (error) {
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É');
      console.error(error);
  }
}